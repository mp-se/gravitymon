; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
lib_dir = lib
include_dir = lib

[common_env_data]
; upload_speed = 921600
upload_speed = 460800
monitor_speed =  115200
platform = espressif8266@4.2.1
platform32 = espressif32@6.9.0
build_unflags = 
build_flags = 
	-Wl,-Map,output.map
	-D BAUD=${common_env_data.monitor_speed}
	; -D SKIP_SLEEPMODE
	; -D FORCE_GRAVITY_MODE
	; -D COLLECT_PERFDATA
	-D USE_LITTLEFS=true
	-D CFG_APPVER="\"2.1.1\""
	-D CFG_GITREV=\""beta-1\""
	; !python script/git_rev.py 
	-D MAX_SKETCH_SPACE=0x1c0000
lib_deps =
	; Using local copy of these libraries
	; https://github.com/mp-se/i2cdevlib.git#<document> 		
	; https://github.com/mp-se/Arduino-Temperature-Control-Library
	https://github.com/mp-se/tinyexpr#v1.0.0
    https://github.com/bblanchon/ArduinoJson#v7.3.0
    https://github.com/256dpi/arduino-mqtt#v2.5.2
	https://github.com/mp-se/espframework#1.1.3
	https://github.com/pstolarz/OneWireNg#0.13.3
	https://github.com/mathieucarbou/ESPAsyncWebServer#v3.6.0
lib_deps8266 = 
	https://github.com/esphome/ESPAsyncTCP#v2.0.0
lib_deps32 = 
	https://github.com/mathieucarbou/AsyncTCP#v3.3.2
lib_ble32 = 
	https://github.com/h2zero/NimBLE-Arduino#2.2.0
extra_scripts =  
	pre:script/board.py 
	script/copy_firmware.py
	script/create_versionjson.py
html_files = 
	html/index.html
	html/app.js.gz
	html/app.css.gz
	html/favicon.ico.gz

[env:gravity-release]
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
framework = arduino
platform = ${common_env_data.platform}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = ${common_env_data.build_unflags}
build_flags = 
	${common_env_data.build_flags}
	-D LOG_LEVEL=5
	-D ESPFWK_DISABLE_LED
	; -D USE_SERIAL_PINS # Use the TX/RX pins for the serial port
	; -D RUN_HARDWARE_TEST # Will run diagnositc setup to validate the GPIO configurations
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps8266}
board = d1_mini
build_type = release
board_build.filesystem = littlefs
build_src_filter = +<*> -<../test/tests*.cpp> 
monitor_filters = esp8266_exception_decoder

[env:gravity-unit]
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
framework = arduino
platform = ${common_env_data.platform}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = ${common_env_data.build_unflags}
build_flags = 
	${common_env_data.build_flags}
	-D LOG_LEVEL=5
lib_deps = 
	https://github.com/bxparks/AUnit#v1.7.1
	${common_env_data.lib_deps}
	${common_env_data.lib_deps8266}
	ESP8266httpUpdate
	DNSServer
board = d1_mini
build_type = release
board_build.filesystem = littlefs
build_src_filter = +<*> -<main.cpp> +<../test/tests*.cpp>
monitor_filters = esp8266_exception_decoder

[env:gravity32-release]
framework = arduino
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	-Wl,-Map,output.map
	#-D CORE_DEBUG_LEVEL=2
	${common_env_data.build_flags}
	-D LOG_LEVEL=5
	-D ESP32D1
	#-D USE_SERIAL_PINS # Use the TX/RX pins for the serial port
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}	
	${common_env_data.lib_ble32}	
lib_ignore = 
board = wemos_d1_mini32 
build_type = release
board_build.partitions = part32.csv
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:gravity32c3-release]
framework = arduino
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	-Wl,-Map,output.map
	${common_env_data.build_flags}
	-D LOG_LEVEL=5
	; -D CORE_DEBUG_LEVEL=6
	-D ESP32C3
	-D ARDUINO_ESP32C3_DEV
	-D ESPFWK_DISABLE_LED
	; -D ARDUINO_USB_CDC_ON_BOOT=1
	; -DUSE_SERIAL_PINS # Use the TX/RX pins for the serial port
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}	
	${common_env_data.lib_ble32}	
lib_ignore = 
board = lolin_c3_mini 
build_type = release
board_build.partitions = part32.csv
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:gravity32s2-release]
framework = arduino
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	-Wl,-Map,output.map
	${common_env_data.build_flags}
	-D LOG_LEVEL=5
	; -D CORE_DEBUG_LEVEL=2
	-D ESP32S2
	-D ARDUINO_ESP32S2_DEV
	-D ARDUINO_USB_CDC_ON_BOOT=1
	; -D USE_SERIAL_PINS # Use the TX/RX pins for the serial port
	; -D RUN_HARDWARE_TEST # Will run diagnositc setup to validate the GPIO configurations
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}	
lib_ignore = 
board = lolin_s2_mini 
build_type = release
board_build.partitions = part32.csv
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:gravity32s3-release]
framework = arduino
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = 
	; pre:script/patch_arduino.py
	${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	-Wl,-Map,output.map
	${common_env_data.build_flags}
	-D LOG_LEVEL=5
	-D CORE_DEBUG_LEVEL=2
	-D ESP32S3
	-D ARDUINO_ESP32S3_DEV
	-D ARDUINO_USB_CDC_ON_BOOT=1
	; -D USE_SERIAL_PINS # Use the TX/RX pins for the serial port
	; -D RUN_HARDWARE_TEST # Will run diagnositc setup to validate the GPIO configurations
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}	
	${common_env_data.lib_ble32}	
lib_ignore = 
board = lolin_s3_mini 
build_type = release
board_build.partitions = part32_coredump.csv
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}

# This is a version for the floaty hardware. No DSB18 sensor and no battery measurement.
[env:gravity32lite-release] 
framework = arduino
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	-Wl,-Map,output.map
	${common_env_data.build_flags}
	-D LOG_LEVEL=5
	; -D CORE_DEBUG_LEVEL=2
	-D ESP32LITE
	-D FLOATY
	; -D USE_SERIAL_PINS # Use the TX/RX pins for the serial port
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}
	${common_env_data.lib_ble32}
lib_ignore = 
board = lolin32_lite 
build_type = release
board_build.partitions = part32.csv
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:gravity-olimex_esp32_c3_devkit_lipo]
framework = arduino
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = 
	${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	-Wl,-Map,output.map
	${common_env_data.build_flags}
	-D LOG_LEVEL=5
	-D ESP32C3
	#-D ARDUINO_USB_CDC_ON_BOOT=1
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}	
	${common_env_data.lib_ble32}	
lib_ignore = 
board = olimex_esp32_c3_devkit_lipo
board_build.variants_dir = boards
build_type = release
board_build.partitions = part32.csv
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}
