; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
lib_dir = lib
include_dir = lib

[common_env_data]
; upload_speed = 921600
upload_speed = 460800
monitor_speed =  115200
platform = espressif8266@4.2.1
platform32 = espressif32@6.10.0
build_unflags = 
build_flags = 
	-Wl,-Map,output.map
	-D BAUD=${common_env_data.monitor_speed}
	-D GRAVITYMON=1
	-D USE_LITTLEFS=true
	-D CFG_APPNAME="\"gravitymon\""
	-D CFG_APPVER="\"2.2.0\""
	-D CFG_GITREV=\""beta-3\""
	; !python script/git_rev.py 
	; -D SKIP_SLEEPMODE=1
	; -D FORCE_GRAVITY_MODE=1
	; -D COLLECT_PERFDATA=1
	; -D ENABLE_REMOTE_UI_DEVELOPMENT=1
	; -D CORE_DEBUG_LEVEL=2
	; -D RUN_HARDWARE_TEST=1 # Will run diagnositc setup to validate the GPIO configurations
	-D MAX_SKETCH_SPACE=0x1c0000
	-D CONFIG_ASYNC_TCP_MAX_ACK_TIME=5000   ; (keep default)
	-D CONFIG_ASYNC_TCP_PRIORITY=10         ; (keep default)
	-D CONFIG_ASYNC_TCP_QUEUE_SIZE=64       ; (keep default)
	-D CONFIG_ASYNC_TCP_RUNNING_CORE=1      ; force async_tcp task to be on same core as Arduino app (default is any core)
	-D CONFIG_ASYNC_TCP_STACK_SIZE=4096     ; reduce the stack size (default is 16K)
lib_deps =
	; Using local copy of these libraries
	; https://github.com/mp-se/i2cdevlib.git#<document> 		
	https://github.com/mp-se/tinyexpr#v1.0.0
    https://github.com/bblanchon/ArduinoJson#v7.3.1
    https://github.com/256dpi/arduino-mqtt#v2.5.2
	https://github.com/mp-se/espframework#1.1.8
	https://github.com/ESP32Async/ESPAsyncWebServer#v3.7.6
	https://github.com/pstolarz/OneWireNg#0.14.0
    https://github.com/pstolarz/Arduino-Temperature-Control-Library.git#d2d70ab
lib_deps8266 = 
	https://github.com/esphome/ESPAsyncTCP#v2.0.0
lib_deps32 = 
	https://github.com/ESP32Async/AsyncTCP#v3.3.8
lib_deps_ble32 = 
	https://github.com/h2zero/NimBLE-Arduino#2.2.3
extra_scripts =  
	pre:script/board.py 
	script/copy_firmware.py
	script/create_versionjson.py
html_files = 
	html/index.html
	html/app.js.gz
	html/app.css.gz
	html/favicon.ico.gz

[env:gravity-release]
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
framework = arduino
platform = ${common_env_data.platform}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = ${common_env_data.build_unflags}
build_flags = 
	${common_env_data.build_flags}
	-D LOG_LEVEL=5
	-D ESPFWK_DISABLE_LED=1
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps8266}
board = d1_mini
build_type = release
board_build.filesystem = littlefs
build_src_filter = +<*> -<../test/tests*.cpp> 
monitor_filters = esp8266_exception_decoder

[env:gravity-unit]
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
framework = arduino
platform = ${common_env_data.platform}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = ${common_env_data.build_unflags}
build_flags = 
	${common_env_data.build_flags}
	-D LOG_LEVEL=5
lib_deps = 
	https://github.com/bxparks/AUnit#v1.7.1
	${common_env_data.lib_deps}
	${common_env_data.lib_deps8266}
	ESP8266httpUpdate
	DNSServer
board = d1_mini
build_type = release
board_build.filesystem = littlefs
build_src_filter = +<*> -<main*.cpp> +<../test/tests*.cpp>
monitor_filters = esp8266_exception_decoder

[env:gravity32-release]
framework = arduino
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	-Wl,-Map,output.map
	${common_env_data.build_flags}
	-D ENABLE_BLE=1
	-D ENABLE_RTCMEM=1
	-D LOG_LEVEL=5
	-D ESP32D1=1
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}
	${common_env_data.lib_deps_ble32}	
lib_ignore = 
board = wemos_d1_mini32 
build_type = release
board_build.partitions = part32.csv
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:gravity32c3-release]
framework = arduino
; platform = ${common_env_data.platform32}
platform = espressif32@6.8.0 ; in the latest version the serial console wont work for this target.
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	-Wl,-Map,output.map
	${common_env_data.build_flags}
	-D ENABLE_BLE=1
	-D ENABLE_RTCMEM=1
	-D LOG_LEVEL=5
	-D ESP32C3=1
	-D ESPFWK_DISABLE_LED=1
	-D ARDUINO_USB_CDC_ON_BOOT=1
	; -D CONFIG_BT_NIMBLE_EXT_ADV=1 # Enable BLE5 extended advertising in the library
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}
	${common_env_data.lib_deps_ble32}	
lib_ignore = 
board = lolin_c3_mini 
build_type = release
board_build.partitions = part32.csv
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:gravity32s2-release]
framework = arduino
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	-Wl,-Map,output.map
	${common_env_data.build_flags}
	-D LOG_LEVEL=5
	-D ESP32S2=1
	-D ENABLE_RTCMEM=1
	-D ARDUINO_USB_CDC_ON_BOOT=1
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}
lib_ignore = 
board = lolin_s2_mini 
build_type = release
board_build.partitions = part32.csv
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:gravity32s3-release]
framework = arduino
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = 
	${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	-Wl,-Map,output.map
	${common_env_data.build_flags}
	-D ENABLE_BLE=1
	-D LOG_LEVEL=5
	-D ESP32S3=1
	-D ENABLE_RTCMEM=1
	-D ARDUINO_USB_CDC_ON_BOOT=1
	; -D CONFIG_BT_NIMBLE_EXT_ADV=1 # Enable BLE5 extended advertising in the library
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}
	${common_env_data.lib_deps_ble32}	
lib_ignore = 
board = lolin_s3_mini 
build_type = release
board_build.partitions = part32.csv
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}

;  This is a version for the floaty hardware. No DSB18 sensor and no battery measurement.
[env:gravity32lite-release] 
framework = arduino
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	-Wl,-Map,output.map
	${common_env_data.build_flags}
	-D FLOATY=1
	-D ENABLE_BLE=1
	-D LOG_LEVEL=5
	-D ESP32=1
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}
	${common_env_data.lib_deps_ble32}
lib_ignore = 
board = lolin32_lite 
build_type = release
board_build.partitions = part32.csv
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:gravity-olimex_esp32_c3_devkit_lipo]
framework = arduino
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = 
	${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	-Wl,-Map,output.map
	${common_env_data.build_flags}
	-D ENABLE_BLE=1
	-D LOG_LEVEL=5
	-D ESP32C3=1
	-D ENABLE_RTCMEM=1
	#-D ARDUINO_USB_CDC_ON_BOOT=1
	; -D CONFIG_BT_NIMBLE_EXT_ADV=1 # Enable BLE5 extended advertising in the library
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}	
	${common_env_data.lib_deps_ble32}	
lib_ignore = 
board = olimex_esp32_c3_devkit_lipo
board_build.variants_dir = boards
build_type = release
board_build.partitions = part32.csv
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:gravity-super_mini_esp32c3]							
framework = arduino
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags =
	${common_env_data.build_unflags}
build_flags =
	-Wl,-Map,output.map
	${common_env_data.build_flags}
	-D LOG_LEVEL=5
	-D ESP32C3=1
	-D ENABLE_BLE=1
	-D ENABLE_RTCMEM=1
	; -D ESPFWK_DISABLE_LED							
	; -D ARDUINO_USB_CDC_ON_BOOT=1
	; -D CONFIG_BT_NIMBLE_EXT_ADV=1 # Enable BLE5 extended advertising in the library
lib_deps =
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}
	${common_env_data.lib_deps_ble32}
lib_ignore =
board = super_mini_esp32c3									
board_build.variants_dir = boards
build_type = release
board_build.partitions = part32.csv
board_build.filesystem = littlefs
board_build.embed_txtfiles = ${common_env_data.html_files}

