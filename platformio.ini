; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
lib_dir = lib
include_dir = lib

[common_env_data]
; upload_speed = 921600
upload_speed = 460800
monitor_speed =  115200
; ESP8266
platform = espressif8266@4.2.1
; ESP32 - Arduino 2.x
platform32 = espressif32@6.11.0 # Arduino 2.x, revert to 6.11 since 6.12 fails in github actions
partitions = part32.csv # For arduino 2.x (0x1c0000 sketch size)
; ESP32 - Arduino 3.x
; platform32 = https://github.com/pioarduino/platform-espressif32/releases/download/54.03.20/platform-espressif32.zip # Arduino 3.x
; platform32 = https://github.com/pioarduino/platform-espressif32/releases/download/55.03.31/platform-espressif32.zip # Arduino 3.x
; partitions = part32_2.0Mb.csv # For arduino 3.x (0x1f0000 sketch size, not compatible with previous versions))
build_unflags = 
build_flags = 
	-Wl,-Map,output.map
	-Os                                     ; optimize for size
	-ffunction-sections                     ; each function in separate section
	-fdata-sections                         ; each data item in separate section
	-Wl,--gc-sections                       ; remove unused sections
	-D CORE_DEBUG_LEVEL=0
	-D BAUD=${common_env_data.monitor_speed}
	-D GRAVITYMON=1
	-D USE_LITTLEFS=true
	-D CFG_APPNAME="\"gravitymon\""
	-D CFG_APPVER="\"2.3.0\""
	-D CFG_GITREV=\""beta-3\""
	; !python script/git_rev.py 
	; -D SKIP_SLEEPMODE=1
	; -D FORCE_GRAVITY_MODE=1
	; -D COLLECT_PERFDATA=1
	; -D ENABLE_REMOTE_UI_DEVELOPMENT=1
	; -D CORE_DEBUG_LEVEL=2
	; -D RUN_HARDWARE_TEST=1 # Will run diagnositc setup to validate the GPIO configurations
	; -D MAX_SKETCH_SPACE=0x1f0000
	-D MAX_SKETCH_SPACE=0x1c0000
	-D CONFIG_ASYNC_TCP_MAX_ACK_TIME=5000   ; (keep default)
	-D CONFIG_ASYNC_TCP_PRIORITY=10         ; (keep default)
	-D CONFIG_ASYNC_TCP_QUEUE_SIZE=64       ; (keep default)
	-D CONFIG_ASYNC_TCP_RUNNING_CORE=1      ; force async_tcp task to be on same core as Arduino app (default is any core)
build_flags_8266 = 
	-D CONFIG_ASYNC_TCP_STACK_SIZE=4096     ; keep moderate stack size for SSL compatibility (4KB)
build_flags_32 = 
	-D CONFIG_ASYNC_TCP_STACK_SIZE=8192     ; adequate stack size for ESP32 (8KB)
	-D ARDUINO_LOOP_STACK_SIZE=8192         ; increase main loop stack size (8KB)
lib_deps =
	; Using local copy of these libraries
	; https://github.com/mp-se/i2cdevlib.git#<document> 		
	; https://github.com/mp-se/tinyexpr#v1.0.0
    https://github.com/bblanchon/ArduinoJson#v7.4.2
    https://github.com/256dpi/arduino-mqtt#v2.5.2
	https://github.com/mp-se/espframework#1.2.7
	https://github.com/ESP32Async/ESPAsyncWebServer#v3.7.10
	https://github.com/pstolarz/OneWireNg#0.14.0
    https://github.com/pstolarz/Arduino-Temperature-Control-Library.git#d2d70ab
lib_deps8266 = 
	https://github.com/esphome/ESPAsyncTCP#v2.0.0
lib_deps32 = 
	https://github.com/ESP32Async/AsyncTCP#v3.4.7
lib_deps_ble32 = 
	https://github.com/h2zero/NimBLE-Arduino#2.3.3
extra_scripts =  
	pre:script/board.py 
	script/copy_firmware.py
	script/create_versionjson.py
html_files = 
	html/index.html
	html/app.js.gz
	html/app.css.gz
	html/favicon.ico.gz

[env:gravity-8266]
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
framework = arduino
platform = ${common_env_data.platform}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = ${common_env_data.build_unflags}
build_flags = 
	${common_env_data.build_flags}
	${common_env_data.build_flags_8266}
	-D LOG_LEVEL=5
	-D ESPFWK_DISABLE_LED=1
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps8266}
board = d1_mini
build_type = release
board_build.filesystem = littlefs
build_src_filter = +<*> -<../test/tests*.cpp> 
monitor_filters = esp8266_exception_decoder

[env:gravity-unit32]
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
framework = arduino
platform = ${common_env_data.platform32}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = ${common_env_data.build_unflags}
build_flags = 
	${common_env_data.build_flags}
	${common_env_data.build_flags_32}
	-D LOG_LEVEL=5
	; -D ESPFWK_DISABLE_WIFI=1
	; -D ESPFWK_DISABLE_WEBSERVER=1
lib_deps = 
	https://github.com/bxparks/AUnit#v1.7.1
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}
board = lolin_c3_mini
build_type = release
board_build.filesystem = littlefs
build_src_filter = +<*> -<main*.cpp> +<../test/tests*.cpp>
monitor_filters = esp8266_exception_decoder

; [env:gravity-32] ; Obsolete target, removed in 2.3.0
; framework = arduino
; platform = ${common_env_data.platform32}
; upload_speed = ${common_env_data.upload_speed}
; monitor_speed = ${common_env_data.monitor_speed}
; extra_scripts = ${common_env_data.extra_scripts}
; build_unflags = 
; 	${common_env_data.build_unflags}
; build_flags = 
; 	${common_env_data.build_flags}
;	${common_env_data.build_flags_32}
; 	-D ENABLE_BLE=1
; 	-D ENABLE_RTCMEM=1
; 	-D LOG_LEVEL=5
; 	-D ESP32D1=1
; lib_deps = 
; 	${common_env_data.lib_deps}
; 	${common_env_data.lib_deps32}
; 	${common_env_data.lib_deps_ble32}	
; lib_ignore = 
; board = wemos_d1_mini32 
; build_type = release
; board_build.partitions = ${common_env_data.partitions}
; board_build.filesystem = littlefs 
; board_build.embed_txtfiles = ${common_env_data.html_files}

[env:gravity-32c3_mini]
framework = arduino
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	${common_env_data.build_flags}
	${common_env_data.build_flags_32}
	-D ENABLE_BLE=1
	-D ENABLE_RTCMEM=1
	-D LOG_LEVEL=5
	-D ESP32C3=1
	-D ESPFWK_DISABLE_LED=1
	-D ARDUINO_USB_CDC_ON_BOOT=1
	-D ESPFWK_REDUCE_WIFI_POWER=1
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}
	${common_env_data.lib_deps_ble32}	
lib_ignore = 
board = lolin_c3_mini 
build_type = release
board_build.partitions = ${common_env_data.partitions}
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}

; [env:gravity-32c3_pico]
; framework = arduino
; platform = ${common_env_data.platform32}
; upload_speed = ${common_env_data.upload_speed}
; monitor_speed = ${common_env_data.monitor_speed}
; extra_scripts = ${common_env_data.extra_scripts}
; build_unflags = 
; 	${common_env_data.build_unflags}
; build_flags = 
; 	-Wl,-Map,output.map
; 	${common_env_data.build_flags}
;	${common_env_data.build_flags_32}
; 	-D ENABLE_BLE=1
; 	-D ENABLE_RTCMEM=1
; 	-D LOG_LEVEL=5
; 	-D ESP32C3=1
; 	-D ESPFWK_DISABLE_LED=1
; 	-D ARDUINO_USB_CDC_ON_BOOT=1
; lib_deps = 
; 	${common_env_data.lib_deps}
; 	${common_env_data.lib_deps32}
; 	${common_env_data.lib_deps_ble32}	
; lib_ignore = 
; board = lolin_c3_pico
; board_build.variants_dir = boards
; build_type = release
; board_build.partitions = ${common_env_data.partitions}
; board_build.filesystem = littlefs 
; board_build.embed_txtfiles = ${common_env_data.html_files}

[env:gravity-32c3_zero]
framework = arduino
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	-Wl,-Map,output.map
	${common_env_data.build_flags}
	${common_env_data.build_flags_32}
	-D ENABLE_BLE=1
	-D ENABLE_RTCMEM=1
	-D LOG_LEVEL=5
	-D ESP32C3=1
	-D ARDUINO_USB_CDC_ON_BOOT=1
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}
	${common_env_data.lib_deps_ble32}	
lib_ignore = 
board = waveshare_esp32c3_zero
board_build.variants_dir = boards 
build_type = release
board_build.partitions = ${common_env_data.partitions}
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:gravity-32c3_supermini]
framework = arduino
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	${common_env_data.build_flags}
	${common_env_data.build_flags_32}
	-D ENABLE_BLE=1
	-D ENABLE_RTCMEM=1
	-D LOG_LEVEL=5
	-D ESP32C3=1
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}
	${common_env_data.lib_deps_ble32}	
lib_ignore = 
board = tenstar_esp32c3_super_mini
board_build.variants_dir = boards 
build_type = release
board_build.partitions = ${common_env_data.partitions}
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:gravity-32s2_mini]
framework = arduino
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	${common_env_data.build_flags}
	${common_env_data.build_flags_32}
	-D LOG_LEVEL=5
	-D ESP32S2=1
	-D ENABLE_RTCMEM=1
	-D ARDUINO_USB_CDC_ON_BOOT=1
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}
lib_ignore = 
board = lolin_s2_mini 
build_type = release
board_build.partitions = ${common_env_data.partitions}
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:gravity-32s3_mini]
framework = arduino
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = 
	${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	${common_env_data.build_flags}
	${common_env_data.build_flags_32}
	-D ENABLE_BLE=1
	-D LOG_LEVEL=5
	-D ESP32S3=1
	-D ENABLE_RTCMEM=1
	-D ARDUINO_USB_CDC_ON_BOOT=1
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}
	${common_env_data.lib_deps_ble32}	
lib_ignore = 
board = lolin_s3_mini 
build_type = release
board_build.partitions = ${common_env_data.partitions}
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:gravity-olimex_esp32c3_devkit_lipo]
framework = arduino
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = 
	${common_env_data.extra_scripts}
build_unflags = 
	${common_env_data.build_unflags}
build_flags = 
	${common_env_data.build_flags}
	${common_env_data.build_flags_32}
	-D ENABLE_BLE=1
	-D LOG_LEVEL=5
	-D ESP32C3=1
	-D ENABLE_RTCMEM=1
lib_deps = 
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}	
	${common_env_data.lib_deps_ble32}	
lib_ignore = 
board = olimex_esp32c3_devkit_lipo
board_build.variants_dir = boards
build_type = release
board_build.partitions = ${common_env_data.partitions}
board_build.filesystem = littlefs 
board_build.embed_txtfiles = ${common_env_data.html_files}

[env:gravity-tenstar_esp32c3_super_mini]							
framework = arduino
platform = ${common_env_data.platform32}
upload_speed = ${common_env_data.upload_speed}
monitor_speed = ${common_env_data.monitor_speed}
extra_scripts = ${common_env_data.extra_scripts}
build_unflags =
	${common_env_data.build_unflags}
build_flags =
	${common_env_data.build_flags}
	${common_env_data.build_flags_32}
	-D LOG_LEVEL=5
	-D ESP32C3=1
	-D ENABLE_BLE=1
	-D ENABLE_RTCMEM=1
lib_deps =
	${common_env_data.lib_deps}
	${common_env_data.lib_deps32}
	${common_env_data.lib_deps_ble32}
lib_ignore =
board = tenstar_esp32c3_super_mini									
board_build.variants_dir = boards
build_type = release
board_build.partitions = ${common_env_data.partitions}
board_build.filesystem = littlefs
board_build.embed_txtfiles = ${common_env_data.html_files}

